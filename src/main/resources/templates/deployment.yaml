apiVersion: apps/v1
kind: Deployment
metadata:
  name: werf-guide-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: werf-guide-app
  template:
    metadata:
      labels:
        app: werf-guide-app
    spec:
      imagePullSecrets:
        - name: registrysecret
      initContainers:
        - name: setup-minio
          image: minio/mc
          command:
            - sh
            - -euc
            - |
              is_minio_available() {
                tries=$1
                i=0
                while [ $i -lt $tries ]; do
                  curl -sSL http://minio:9000/minio/health/live || return 1
                  i=$((i+1))
                  sleep 1
                done
              }
              
              # Дожидаемся доступности MinIO.
              until is_minio_available 10; do
                sleep 1
              done
              
              # Настроим доступ к нашем инстансу MinIO.
              mc alias set minio http://minio:9000 minioadmin minioadmin
              
              # Создадим bucket для нашего приложения.
              mc mb --ignore-existing minio/werf-guide-app

      containers:
        - name: backend
          image: {{ .Values.werf.image.backend }}
          command:
            - sh
            - -euc
            - |
              is_mysql_available() {
                tries=$1
                i=0
                while [ $i -lt $tries ]; do
                  mysqladmin -h mysql -P 3306 -u root -p=password ping || return 1
                  i=$((i+1))
                  sleep 1
                done
              }
              # Дождёмся, когда `mysqladmin ping` отработает 10 раз подряд.
              until is_mysql_available 10; do
                sleep 1
              done
              
              java -jar ./app.jar

          ports:
            - containerPort: 8080
          env:
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB
              value: INFO
            - name: DB_HOST
              value: mysql
            - name: DB_NAME
              value: werf-guide-app
            - name: DB_USER
              value: root
            - name: DB_PASSWD
              value: password
        - name: frontend
          image: {{ .Values.werf.image.frontend }}
          ports:
            - containerPort: 80